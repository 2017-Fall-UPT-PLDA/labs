# See http://scalameta.org/scalafmt/#Configuration for details,
# mostly done by trial and error. But I guess this formatting is "good enough"
#
#  !!! ALWAYS PUT THE CLOSING ) ON A SEPARATE LINE !!!!!!!
# it's the difference between this:
#
#final case class SemanticVersion(
#  major: Int,
#  minor: Int,
#  patch: Int,
#  label: Option[Label] = Option.empty[Label],
#  meta:  Option[String] = Option.empty[String]
#) extends SemanticVersionOrdering with Ordered[SemanticVersion]
#
# And this ungodly abomination:
#
#final case class SemanticVersion(major: Int,
#                                 minor: Int,
#                                 patch: Int,
#                                 label: Option[Label] = Option.empty[Label],
#                                 meta:  Option[String] = Option.empty[String])
#    extends SemanticVersionOrdering with Ordered[SemanticVersion]
#
# Such abominations are created at the call site of multi-arg functions as well.
#

project {
  #if you don't specify that files ending in .scala .sbt with $,
  # .scalafmt.conf is included in the formatting attempt
  includeFilters = [
    ".*.\\.scala$"
    ".*\\..sbt$"
  ]
}

# Note. Only for the truest vertical aligners. This is a new option,
# feel free to open PR enabling more crazy vertical alignment here.
# Expect changes.
align = most

maxColumn = 120

# If true, the margin character | is aligned with the opening triple quote string literals
assumeStandardLibraryStripMargin = true

includeCurlyBraceInSelectChains = false

align {
  tokens = [
    ":"
    "="
    "=>"
    "->"
    ","

    "<-"
    "_"

    "%"
    "%%"
    ":="
  ]
  arrowEnumeratorGenerator = true
}

continuationIndent {
  callSite = 2
  defnSite = 2
  extendSite = 4
}

danglingParentheses = true


newlines {
  alwaysBeforeTopLevelStatements = true
  sometimesBeforeColonInMethodReturnType = true
  penalizeSingleSelectMultiArgList = false
  alwaysBeforeElseAfterCurlyIf = true
  neverInResultType = false
}

spaces {
  afterKeywordBeforeParen = true
}

binPack {
  parentConstructors = true
  literalArgumentLists = true
}

optIn {
  breaksInsideChains = false
  breakChainOnFirstMethodDot = true
  configStyleArguments = true
}

runner {
  optimizer {
    # Set to -1 to disable. Increase number to require bigger argument bodies to trigget flag
    # presumably, this number is number of characters.
    forceConfigStyleOnOffset = 150

    # minimum number of func arguments before config-style (look at top of file) is enabled
    forceConfigStyleMinArgCount = 2
  }
}

rewrite {
  rules = [
    SortImports
    # if your for has more than one single <- then it gets transformed into a multit-line curly brace one
    PreferCurlyFors
  ]
}